<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Path x:Key="Close" Stroke="#FFA9DDFD" StrokeThickness="1.5" Stretch="None"
        Data="M 0,0 L 8,8 M 0,8 L 8,0 "/>
  <Style x:Key="SimpleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="White"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Grid" Opacity="0.8">
            <Border x:Name="Border" CornerRadius="3" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}" Background="#02000000"/>
            <ContentPresenter x:Name="ContentText" Width="Auto"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="true"
                              OpacityMask="Black"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Grid" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Grid" Property="UIElement.Opacity" Value="0.6"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="true"/>
            <Trigger Property="UIElement.IsEnabled" Value="false"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SimpleRepeatButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="Control.Background" Value="#FFDFDFDF"/>
    <Setter Property="Control.BorderBrush" Value="#FFDFDFDF"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Border x:Name="Border" Background="{DynamicResource CLSBtn}"/>
            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"
                              Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource CLSBtnHover}" TargetName="Border" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SimpleThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid x:Name="Grid" Margin="0,0,0,0">
            <Border x:Name="Rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"
                    Height="Auto" MinHeight="0" Background="#4CFFFFFF" CornerRadius="7"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Rectangle" Property="Border.Background" Value="#7FFFFFFF"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false"/>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Rectangle" Property="Border.Background" Value="#66FFFFFF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SimpleScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}"
                       StrokeThickness="{TemplateBinding Control.BorderThickness}" RadiusX="1" RadiusY="1"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                Background="#33000000" ClipToBounds="true">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="18" Height="0"/>
              <RowDefinition Height="*"/>
              <RowDefinition MaxHeight="18" Height="0"/>
            </Grid.RowDefinitions>
            <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource SimpleRepeatButton}"
                          Command="ScrollBar.LineUpCommand" Height="Auto" VerticalAlignment="Stretch" Margin="2,0">
              <Grid>
                <Path x:Name="DecreaseArrow" Stroke="#7F2B2B2B" StrokeThickness="1" Data="M 0,4 L 8,4 4,0 Z"
                      Fill="LightGray"/>
              </Grid>
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="true">
              <Track.Thumb>
                <Thumb Style="{DynamicResource SimpleThumbStyle}" Margin="2" Height="Auto" MinHeight="10"
                       VerticalAlignment="Stretch"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton x:Name="PageUp" Style="{DynamicResource SimpleScrollRepeatButtonStyle}"
                              Command="ScrollBar.PageDownCommand"/>
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton x:Name="PageDown" Style="{DynamicResource SimpleScrollRepeatButtonStyle}"
                              Command="ScrollBar.PageUpCommand"/>
              </Track.DecreaseRepeatButton>
            </Track>
            <RepeatButton x:Name="IncreaseRepeat" Grid.Row="3" Style="{DynamicResource SimpleRepeatButton}"
                          Command="ScrollBar.LineDownCommand" Margin="1.8,0,1.8,0">
              <Grid>
                <Path x:Name="IncreaseArrow" Stroke="#7F2b2b2b" StrokeThickness="1" Data="M 0,0 L 4,4 8,0 Z"
                      Fill="#FFD3D3D3"/>
              </Grid>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
              <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="Track.Orientation" Value="Vertical"/>
              <Setter TargetName="DecreaseRepeat" Property="ButtonBase.Command" Value="ScrollBar.LineLeftCommand"/>
              <Setter TargetName="IncreaseRepeat" Property="ButtonBase.Command" Value="ScrollBar.LineRightCommand"/>
              <Setter TargetName="PageDown" Property="ButtonBase.Command" Value="ScrollBar.PageLeftCommand"/>
              <Setter TargetName="PageUp" Property="ButtonBase.Command" Value="ScrollBar.PageRightCommand"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="NewsBox" TargetType="{x:Type TextBoxBase}">
    <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
            BorderThickness="{TemplateBinding Control.BorderThickness}"
            Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true" CornerRadius="0">
      <UIElement.Effect>
        <DropShadowEffect BlurRadius="50" Opacity="0.25" ShadowDepth="0"/>
      </UIElement.Effect>
      <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden"/>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="ProgressBar" TargetType="{x:Type ProgressBar}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid>
            <Border x:Name="PART_Track" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1"
                    ClipToBounds="true" Margin="0,4,0,4" Background="#0CFFFFFF" BorderBrush="#33FFFFFF"/>
            <Border x:Name="PART_Indicator" MinWidth="1" HorizontalAlignment="Left" BorderThickness="0"
                    CornerRadius="0.5" Width="Auto" Margin="1,5,1,5" Background="{TemplateBinding Control.Foreground}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ToolTip}">
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Control.Foreground" Value="#FFf6a701"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.FontSize" Value="13"/>
    <Setter Property="ToolTip.HasDropShadow" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border Name="Border" Background="#D8161413" BorderBrush="#FF353837" BorderThickness="1"
                  Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}">
            <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolTip.HasDropShadow" Value="true">
              <Setter TargetName="Border" Property="Border.CornerRadius" Value="3"/>
              <Setter TargetName="Border" Property="UIElement.SnapsToDevicePixels" Value="true"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Hyperlink}">
    <Setter Property="TextElement.Foreground" Value="#FF363636"/>
    <Setter Property="Inline.TextDecorations" Value="None"/>
    <Style.Triggers>
      <Trigger Property="ContentElement.IsMouseOver" Value="true">
        <Setter Property="TextElement.Foreground" Value="#ffe22c14"/>
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="false">
        <Setter Property="TextElement.Foreground"
                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="true">
        <Setter Property="FrameworkContentElement.Cursor" Value="Hand"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Color x:Key="WindowColor">#FFE8EDF9</Color>
  <Color x:Key="ContentAreaColorLight">White</Color>
  <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>
  <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
  <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
  <Color x:Key="DisabledForegroundColor">#FF888888</Color>
  <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
  <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
  <Color x:Key="ControlLightColor">#FF80d6af</Color>
  <Color x:Key="ControlMediumColor">#FF3bb57d</Color>
  <Color x:Key="ControlDarkColor">#FF211AA9</Color>
  <Color x:Key="ControlMouseOverColor">#FFB26823</Color>
  <Color x:Key="ControlPressedColor">#FF7c5707</Color>
  <Color x:Key="GlyphColor">#FF333333</Color>
  <Color x:Key="GlyphMouseOver">
    sc#1, 0.004391443, 0.002428215, 0.242281124
  </Color>
  <Color x:Key="BorderLightColor">#FF2d8b6f</Color>
  <Color x:Key="BorderMediumColor">#FF888888</Color>
  <Color x:Key="BorderDarkColor">#FF2d8b6f</Color>
  <Color x:Key="PressedBorderLightColor">#FF73451c</Color>
  <Color x:Key="PressedBorderDarkColor">#FF401f02</Color>
  <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
  <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
  <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>
  <Style x:Key="Check" TargetType="{x:Type CheckBox}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
              <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1">
                <Border.BorderBrush>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF633B1B" Offset="0"/>
                    <GradientStop Color="#FF472408" Offset="1"/>
                  </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#FFB26823"/>
                        <GradientStop Color="#FF633910" Offset="1"/>
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Border.Background>
                <Grid>
                  <Path x:Name="CheckMark" Visibility="Collapsed" Width="7" Height="7" SnapsToDevicePixels="false"
                        StrokeThickness="2" Data="M 0,0 L 7,7 M 0,7 L 7,0 ">
                    <Shape.Stroke>
                      <SolidColorBrush Color="{DynamicResource ContentAreaColorLight}"/>
                    </Shape.Stroke>
                  </Path>
                  <Path x:Name="InderminateMark" Visibility="Collapsed" Width="7" Height="7" SnapsToDevicePixels="false"
                        StrokeThickness="2" Data="M 0,7 L 7,0 ">
                    <Shape.Stroke>
                      <SolidColorBrush Color="{DynamicResource ContentAreaColorLight}"/>
                    </Shape.Stroke>
                  </Path>
                </Grid>
              </Border>
            </BulletDecorator.Bullet>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}"/>
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderDarkColor}"/>
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderLightColor}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"/>
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="true"/>
          </BulletDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="BtnPlay" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF0f99d9" Offset="0"/>
    <GradientStop Color="#FF0177af" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="BtnPlayHover" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF36bffe" Offset="0"/>
    <GradientStop Color="#FF0298de" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="BtnPlayPressed" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF0d83b8" Offset="0"/>
    <GradientStop Color="#FF00618e" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="PlayButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="White"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Grid" Opacity="1">
            <Border x:Name="Border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="Stretch" Width="Auto"
                    CornerRadius="3" Background="{DynamicResource BtnPlay}"/>
            <ContentPresenter x:Name="ContentText" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                              RecognizesAccessKey="true"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource BtnPlayHover}" TargetName="Border" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{DynamicResource BtnPlayPressed}" TargetName="Border" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource BtnPlay}" TargetName="Border" Property="Border.Background"/>
              <Setter TargetName="Grid" Property="UIElement.Opacity" Value="0.20"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="true"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LinkButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="#FFFFFFFF"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Grid">
            <Border x:Name="Border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="Stretch" Width="Auto"
                    CornerRadius="0" Background="#02000000"/>
            <ContentPresenter x:Name="ContentText" Margin="{TemplateBinding Control.Padding}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="true"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ContentText" Property="UIElement.Effect">
                <Setter.Value>
                  <DropShadowEffect ShadowDepth="0" BlurRadius="20" Color="#33FFFFFF"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Grid" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Grid" Property="UIElement.Opacity" Value="0.60"/>
              <Setter Property="Control.Foreground" Value="White"/>
              <Setter TargetName="ContentText" Property="UIElement.Effect">
                <Setter.Value>
                  <DropShadowEffect BlurRadius="0" ShadowDepth="0"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Grid" Property="UIElement.Opacity" Value="0.40"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="true"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>