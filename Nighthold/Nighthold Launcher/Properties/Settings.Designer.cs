//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nighthold_Launcher.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.10.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://launcher.nighthold.ru/Config.xml")]
        public string XMLDocumentUrl {
            get {
                return ((string)(this["XMLDocumentUrl"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://nighthold.ru/dashboard/payment/add")]
        public string BuyDPUrl {
            get {
                return ((string)(this["BuyDPUrl"]));
            }
            set {
                this["BuyDPUrl"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Nighthold")]
        public string ServerName {
            get {
                return ((string)(this["ServerName"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public double WindowSizeWidth {
            get {
                return ((double)(this["WindowSizeWidth"]));
            }
            set {
                this["WindowSizeWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public double WindowSizeHeight {
            get {
                return ((double)(this["WindowSizeHeight"]));
            }
            set {
                this["WindowSizeHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool WindowMaximized {
            get {
                return ((bool)(this["WindowMaximized"]));
            }
            set {
                this["WindowMaximized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool EnableNotificationPopups {
            get {
                return ((bool)(this["EnableNotificationPopups"]));
            }
            set {
                this["EnableNotificationPopups"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StartLauncherWithComputer {
            get {
                return ((bool)(this["StartLauncherWithComputer"]));
            }
            set {
                this["StartLauncherWithComputer"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StartLauncherMinimizedToTray {
            get {
                return ((bool)(this["StartLauncherMinimizedToTray"]));
            }
            set {
                this["StartLauncherMinimizedToTray"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int NotificationPopupsSettingId {
            get {
                return ((int)(this["NotificationPopupsSettingId"]));
            }
            set {
                this["NotificationPopupsSettingId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int CloseButtonSettingId {
            get {
                return ((int)(this["CloseButtonSettingId"]));
            }
            set {
                this["CloseButtonSettingId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int PlayButtonSettingId {
            get {
                return ((int)(this["PlayButtonSettingId"]));
            }
            set {
                this["PlayButtonSettingId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Start {
            get {
                return ((string)(this["Start"]));
            }
            set {
                this["Start"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ClientPaths>
  <Expansion id=""1"" update_version=""0"" />
  <Expansion id=""2"" update_version=""0"" />
  <Expansion id=""3"" update_version=""0"" />
  <Expansion id=""4"" update_version=""0"" />
  <Expansion id=""5"" update_version=""0"" />
  <Expansion id=""6"" update_version=""0"" />
  <Expansion id=""7"" update_version=""0"" />
  <Expansion id=""8"" update_version=""0"" />
  <Expansion id=""9"" update_version=""0"" />
</ClientPaths>")]
        public global::System.Xml.XmlDocument ClientPathsDefault {
            get {
                return ((global::System.Xml.XmlDocument)(this["ClientPathsDefault"]));
            }
        }
    }
}
